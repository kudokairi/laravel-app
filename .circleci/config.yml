varsion: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
      - image: circleci/postgres:11.6-alpine
        environment:
          POSTGRES_DB: larasns
          POSTGRES_USER: default
          POSTGRES_PASSWORD: secret
    environment:
      APP_ENV: testing
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: larasns
      DB_USERNAME: default
      DB_PASSWORD: secret
    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "laravel/composer.lock" }}
      - run: 
          working_directory: laravel
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "laravel/composer.lock" }}
          paths:
            - laravel/vendor
      - restore_cache:
          key: npm-v1-{{ checksum "laravel/package-lock.json" }}
      - run:
          working_directory: laravel
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "laravel/package-lock.json" }}
          paths:
            - laravel/node_modules
      - run:
          working_directory: laravel
          command: npm run dev
      - run:
          name: get ready for postgres
          command: |
              sudo apt-get update
              sudo apt-get install libpq-dev
              sudo docker-php-ext-install pdo_pgsql
              dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          working_directory: laravel
          name: php test
          command: vendor/bin/phpunit

  deploy:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      - add_ssh_keys
      - run:
          name: deploy
          command: |
            ssh -o StrictHostKeyChecking=no -t webapp@${HOST_NAME} "cd laravel-app && \
            git pull origin master && \
            cd laravel && \
            composer install -n --no-dev --prefer-dist && \
            npm ci && \
            npm run prod && \
            php artisan migrate --force && \
            php artisan config:cache"

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master          
